
/* セレクタ{プロパティ:　値;}
    セレクタ：デザインの適用先。
    pタグの場合、全てのp要素に。
    クラスの場合、HTML側で指定したクラスのみ反映。  
    クラスは複数のタグで使用可能。
    タグ名.クラス名でも可能。
    一つのセレクタに複数のプロパティが付けれる。
*/
/* #333333はR(red)G(green)B(blue)の明るさを意味している。
    #249FA6はredが24(16進数)、greenが9F、blueがA6を表している
    白の時は#FFFFFF。三色す全てが重なっている。
    黒の時は#000000。三色全て同じ割合だとグレー、#333333    
*/
/* GoogleFontsでフォントを探す */
@import url(http//fonts.googleapis.com/css?family=Antic+Didone);

/* background-repeat: repeat-x;で横一列で画像を並べる */
/* background-position: 0 10px;で横、縦にスペースを作る事ができる*/
/* background-position: bottom;で下に並べる事ができる*/
/* background: color image repeat position;で一括でできる*/
body {
    color: #333333;
    background-image: url("repeat-x.jpeg");
    background-repeat: repeat-x;
    background-position: 0 10px;
}

/* idとクラスでは、idセレクタに指定したプロパティが優先される */
#pageBodyMain .pageTitle {
    font-size: 26px;
    background-color: #F2F2E5;
    padding: 5px 15px;
    line-height: 1.231;
    margin-top: 0;
}

/* 画面の広さを980pxとし、左右はautoにすることで、真ん中にページを配置する */
#page {
    width: 980px;
    margin: 0 auto;
}

#pageBody {
    background-color: #FFCC66;
    border: solid 10px #FF0000;
    margin-top: 30px;
}

/* clearプロパティ floatプロパティの回り込みを解除。bothはfloatの回り込みを解除 */
#pageBody:after {
    content: "";
    clear: both;
    display: block;
}

/* floatプロパティ 値を指定した要素を左、または右に寄せる。後続のコンテンツは反対側に回り込む。 */
#pageBodyMain {
    width: 720px;
    float: left;
    background-color: #EEEEEE;
}

#pageBodySub {
    width: 220px;
    float: right;
    background-color: #EEEEEE;
}

#pageHead #siteTitle {
    font-size: 30px;
    line-height: 1.2;
    margin-bottom: 0;
    font-family: 'Antic Didone', serif;
}

#pageHead #catchcopy {
    font-size: 12px;
    line-height: 1.5;
    margin-bottom: 5px;
}

#pageHead .globalNavi {
    border: solid #cccccc;
    border-width: 1px 0;
    padding: 10px 0;
}

/* リストをfloatにしたため、リストの親要素のボックスの高さが0になり、横並びになる。*/
/* box-sizing */
#pageHead .globalNavi ul li {
    list-style: none;
    width: 245px;
    float: left;
    border-left: solid 1px #CCCCCC;
    padding: 0 10px;
    box-sizing: border-box;
    text-align: center;
    font-size: 14px;
    line-height: 1.429;
}

#pageHead .globalNavi ul li:first-child {
    border-left: none;
}

/* clearfixを用いて、リストの親要素であるul要素のボックスが高さを持つようにする */
/*
    floatプロパティで縦に並べられたブロック要素を横並びにすることができます。
    floatプロパティを用いると要素が浮いた状態になるため、
    他の要素が下に回り込んでしまうトラブルが起きてしまいます
    clearfixで浮いた要素にバリアのようなものを張る。
*/
#pageHead .gloabalNavi ul:after {
    content: "";
    clear: both;
    display: block;
}
 
#pageHead .globalNavi ul {
    margin: 0;
    padding: 0;
}

strong {
    font-size: 30px;
}

/* figureタグは自動で周りに余白がついている */
figure {
    margin: 0;
}

figcaption {
    font-size: 12px;
}

/*　全てのpタグのフォントサイズが14pxになる*/
/* 
    指定しない場合、通常の文字サイズは14px
    上下に3pxずつ余白を持たせたい場合、
    line-height: 20px;
    line-heightは文字サイズに対する割合で示す
    文字の高さを20としたい時、20/14=1.429
    文字の中にstrongタグで強調した時、割合にしないと汚くなる
*/
p {
    font-size: 14px;
    line-height: 1.429;
}

.lineHegith{
    font-size: 14px;
    line-height: 20px;
}

/* background-color　プロパティ　背景色 */
/* border-bottom　プロパティ　下線をつける　順不同で線の形、大きさ、色を指定可能*/
/* padding: 上下 左右; padding: 上下左右; 余白を入れる padding-leftも可能*/
/* 
    floatした要素は、他の要素と上下マージンが相殺されない。
    ブラウザの標準のマージンが設定されているため、意図しな余白が生まれる
*/
#pageBodyMain .pageTitle {
    font-size: 26px;
    line-height: 1.231;
    background-color: greenyellow;
    border-bottom: solid 4px #000000;
    padding: 5px 15px;
    margin-top: 0;
}

/* 
    idの宣言は#で可能 
    NTML内で同じidは存在してはいけない    
*/
/* border-left プロパティ　文字の左側に線をつける */
#title1 {
    font-size: 20px;
    line-height: 1.3;
    border-left: solid 3px #000000;
}

/* 
    border-collapseで羅線と羅線の隙間をなくす。
    collapse結合ボーダー
    separateの時、border-spaceing: で隙間の距離を指定
*/
.borderWidthTable {
    font-size: 15px;
    line-height: 1.4;
    border: 1px solid #CCCCCC;
    margin: 40px;
    border-collapse: separate;
    border-spacing: 5px;
}

/* カンマで区切ることで、セレクトを増やすことができ、CSSのデザインを共有できる */
/* table td,
table th　{
    border: 1px solid #CCCCCC;
    padding: 5px 10px;
} */

table th {
    background-color: #EEEEEE;
    line-height: 1.429;
    text-align: left;
    width: 20%;
}

table caption {
    line-height: 1.429;
    text-align: left;
    font-weight: bold;
}

/*
    clearfixは、親要素のセレクタに:afterをつける
    :afterは擬似要素の一つで、
    contentプロパティで文言を追加
    content:"";として親要素の最後に空要素を追加し、
    その空要素をclear:both; し、floatを解除する。
    display:block;として空要素をブロック要素にする必要がある。
    擬似要素には:before :first-left :first-lineがある
*/
/*
    floatの不具合を解消するoverflow:hidden;
    overflow: hidden;
    ボックスに内容が入りきらない場合に、はみ出した部分の表示方法を指定する
    overflow: scroll;で入りきらない場合、スクロールで表示できる。
*/
section:after {
    content: "";
    clear: both;
    display: block;
}

.jojo {
    width: 300px;
    height: 200px;
    border: solid;
    overflow: scroll;
}

.img-left {
    float: left;
}

.clear {
    clear: both;
}

/* 
    padding は羅線の内側に余白を設定
    margin　は羅線の外側に余白を設定
    borderの下側に余白を作成
*/
.articleDetailHead {
    border-bottom: solid 1px #cccccc;
    margin-bottom: 30px;
    padding-bottom: 15px;
}

.articleDetailFoot {
    border-top: solid 1px #cccccc;
    margin-top: 30px;
    padding-top: 15px;
}

/* articleDetailBody内のセクションに適用される*/
.articleDetailBody section {
    margin: 30px 0;
}

.creditUnit {
    padding: 10px;
    border: solid 1px #cccccc;
}

.creditUnit p {
    font-size: 12px;
}

/* liだけだとolのliも四角に変わってしまう */
.articleDetailFoot ul li {
    font-size: 14px;
    line-height: 1.429;
    list-style-type: square;
}

/* text-alignは中央揃い、左寄せ、右寄せ、正当化がある */
/* font-weightはbold(太字)normal(細字)を指定 */
.simpleTextCenter {
    text-align: center;
    font-weight: bold;
    width: 40%;
    background-color: #ffeecc;
    border-style: solid;
    padding: 15px;
    margin: 30px 0px;
}

.simpleTextLeft {
    text-align: left;
    font-weight: normal;
    width: 40%;
    background-color: #ffeecc;
    border-style: solid;
    padding: 15px;
    margin-bottom: 20px;
}

.simpleTextLight {
    text-align: right;
    width: 40%;
    background-color: #ffeecc;
    border-style: solid;
    padding: 15px;
    margin-bottom: 20px;
}

.simpleTextJustify {
    text-align: justify;
    font-weight: bold;
    width: 40%;
    background-color: #ffeecc;
    border-style: solid;
    padding: 15px;
    margin: 20px　0px;
}

#copyright small {
    font-size: 12px;
    line-height: 1.5;
}

#pageBodySub h2 {
    font-size: 16px;
    line-height: 1.375;
    padding: 5px;
    margin-top: 0;
    border-bottom: 1px solid #CCCCCC;
}

#pageBodySub .newsList ul {
    list-style: none;
    padding: 0;
}

#pageBodySub .newsList ul li {
    font-size: 12px;
    line-height: 1.5;
    margin: 10px 5px;
}

/*
    <strong>と<time>はインライン要素。
    形成するボックスは文字部分のみ。行内の一部で、次の文章はそのまま後ろに続く。
    <h1>と<p>はブロックレベル要素。
    横幅いっぱいのボックスの範囲。次の文章は下に配置される。widthを指定したときその横幅になる。
    インライン要素をブロックレベル要素にするにはdisplay: block;
    ブロックレベル要素をインライン要素にするにはdisplay: inline;
*/
#pageBodySub .newsList ul li time {
    font-weight: bold;
    display: block;
}

#pageBodySub .localNavi ul {
    margin: 0 0 30px;
    padding-left: 0;
}

/*
    list-style-imageプロパティでリスト記号をアイコンにする。
    しかし、アイコンのいちが少し下にずれてしまっている。
    リスト記号を画像にしたい場合は、background-imageプロパティを使う。
    画像が繰り返して敷き詰められる。
    background-repeat: no-repeat;　で背景画像の繰り返し表示を禁止する。
*/
/* semi-colon expected 上の文のコロンがあるかないか確認 */
#pageBodySub .localNavi ul li {
    font-size: 14px;
    line-height: 1.429;
    margin-bottom: 12px;
    list-style-type: none;
    background-image: url("icon.jpg");
    background-repeat: no-repeat;
    background-position: 0 8px;
    padding-left: 10px;
}

/* リンクの文字色を変更する */
a {
    color: #999966;
}

/*
    擬似クラス
    a:hover リンクにカーソルを乗せた時、文字色を変更する。
    alink 未訪問のリンクの時、文字色を変更する。
    a:active リンクをクリックしている時
    a:visited すでに訪問済みのリンク
    a:focus リンクにフォーカスしている時(tabキーで移動)
    フォーカス時、ブラウザの標準でoutlineプロパティが指定されているため、点線で囲まれる。
*/
a:hover {
    color: #996600;
}

#pageFoot {
    border-top: solid 1px #CCCCCC;
    margin-top: 15px;
}